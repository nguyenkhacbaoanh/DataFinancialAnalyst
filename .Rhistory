library(ggplot)
source('~/.active-rstudio-document')
MCD_stock <- read.csv("datasets/MCD_PriceDaily.csv", header = TRUE)
setwd("~/dev/DataFinancialAnalyst")
MCD_stock <- read.csv("datasets/MCD_PriceDaily.csv", header = TRUE)
p = MCD_stock[:,7]
p = MCD_stock[,7]
n = length(p)
returns = p[-1]/p[-n] - 1
logReturns = diff(log(p))
plot(returns, logReturns, ylab="log return")
abline(a=0,b=1,col='red', lwd=2)
random.seed(2015)
n_iters = 10000
values = matrix(n_iters)
for (i in 1:n_iters)
{
logr = rnorm(n = 20, mean = mean(logReturns), sd = sd(logReturns))
price = 93.07*exp(cumsum(logr))
ind = (min(price) < 85)
values[i] = 100*ind - (1 - ind)
}
mu = men(values)
mu
random.seed(2015)
n_iters = 10000
values = matrix(n_iters)
for (i in 1:n_iters)
{
logr = rnorm(n = 20, mean = mean(logReturns), sd = sd(logReturns))
price = 93.07*exp(cumsum(logr))
ind = (min(price) < 85)
values[i] = 100*ind - (1 - ind)
}
mu = mean(values)
mu
random.seed(2015)
n_iters = 10000
values = matrix(n_iters)
for (i in 1:n_iters)
{
logr = rnorm(n = 20, mean = mean(logReturns), sd = sd(logReturns))
price = 93.07*exp(cumsum(logr))
ind = (min(price) < 84.5)
values[i] = 125*ind - (1 - ind)
}
mu = mean(values)
mu
pnorm(0.3, mean = 0.1, sd = 0.2)
logr = rnorm(mean = 0.001, sd = 0.015)
logr = rnorm(mean = 0.001, sd = 0.015,n = 1)
pnorm(logr, mean = 0.001, sd = 0.015)
logr
